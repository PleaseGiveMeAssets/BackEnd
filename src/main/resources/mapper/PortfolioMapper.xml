<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring.mapper.PortfolioMapper">

    <!-- 특정 사용자에 대한 주문 정보 조회 -->
    <select id="selectOrdersByUserId" parameterType="string" resultType="Portfolio">
        SELECT USER_ID AS userId, PRICE AS price, QUANTITY AS quantity
        FROM `PORTFOLIO`
        WHERE USER_ID = #{userId}
    </select>
    <select id="selectOrdersByUserIdAndStockId" parameterType="map" resultType="Portfolio">
        SELECT *
        FROM PORTFOLIO
        WHERE STOCK_ID = #{stockId}
        AND USER_ID = #{userId}
    </select>
    <insert id="insert" parameterType="map">
        INSERT INTO PORTFOLIO
        ( USER_ID, STOCK_ID, SHORT_CODE, PRICE, QUANTITY, MEMO, ORDER_TYPE, ORDERED_AT)
        VALUES
        ( #{userId}, #{stockId}, #{shortCode}, #{orderDTO.price}, #{orderDTO.quantity},
        #{orderDTO.memo}, #{orderDTO.orderType}, #{orderDTO.orderedAt})
    </insert>
    <update id="update" parameterType="map">
        UPDATE PORTFOLIO
        SET
        PRICE = #{orderDTO.price},
        QUANTITY = #{orderDTO.quantity},
        MEMO = #{orderDTO.memo},
        ORDER_TYPE = #{orderDTO.orderType},
        ORDERED_AT = #{orderDTO.orderedAt}
        WHERE
        PORTFOLIO_ID = #{portfolioId}
    </update>
    <delete id="deleteOrdersByIds" parameterType="list">
        DELETE FROM PORTFOLIO
        WHERE PORTFOLIO_ID IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteAllOrder" parameterType="map">
        DELETE FROM PORTFOLIO
        WHERE USERID_ID = #{userID} AND
        STOCK_ID = #{stockId}
    </delete>

    <select id="findByUserId" resultType="ForChartDTO">
        SELECT
        s.STOCK_NAME,
        SUM(CASE WHEN o.ORDER_TYPE = 'B' THEN o.QUANTITY ELSE -o.QUANTITY END) AS total_quantity,
        SUM(CASE WHEN o.ORDER_TYPE = 'B' THEN o.QUANTITY * o.PRICE ELSE -o.QUANTITY * o.PRICE END) AS total_price
        FROM
        `PORTFOLIO` o
        JOIN
        `STOCK` s ON o.STOCK_ID = s.STOCK_ID
        WHERE
        o.USER_ID =#{userId}
        GROUP BY
        s.STOCK_NAME;
    </select>
</mapper>
