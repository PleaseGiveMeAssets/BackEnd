<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring.mapper.UserMapper">
    <resultMap id="userResultMap" type="User">
        <id property="userId" column="USER_ID"/>
        <result property="password" column="PASSWORD"/>
        <result property="phoneFirst" column="PHONE_FIRST"/>
        <result property="phoneMiddle" column="PHONE_MIDDLE"/>
        <result property="phoneLast" column="PHONE_LAST"/>
        <result property="phoneVerificationCode" column="PHONE_VERIFICATION_CODE"/>
        <result property="phoneVerifiedStatus" column="PHONE_VERIFIED_STATUS"/>
        <result property="name" column="NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="emailVerificationCode" column="EMAIL_VERIFICATION_CODE"/>
        <result property="emailVerifiedStatus" column="EMAIL_VERIFIED_STATUS"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
    </resultMap>

    <!-- User 정보를 가져오는 resultMap -->
    <resultMap id="selectUserProfileResultMap" type="User" autoMapping="false">
        <constructor>
            <idArg column="user_id" javaType="String"/>
            <arg column="profile_image_url" javaType="String"/>
            <arg column="nickname" javaType="String"/>
        </constructor>
    </resultMap>

    <!-- 사용자 프로필을 조회하는 쿼리 -->
    <select id="selectUserProfile" parameterType="string" resultMap="selectUserProfileResultMap">
        SELECT u.USER_ID AS user_id,
        u.NICKNAME AS nickname,
        u.PROFILE_IMAGE_URL AS profile_image_url
        FROM USER u
        WHERE u.USER_ID = #{userId}
    </select>

    <select id="selectUserById" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM USER
        WHERE USER_ID = #{userId}
    </select>

    <insert id="insertUser" parameterType="MemberDTO">
        INSERT INTO USER (USER_ID, PASSWORD, PHONE_FIRST, PHONE_MIDDLE, PHONE_LAST, PHONE_VERIFICATION_CODE, NAME,
        EMAIL, EMAIL_VERIFICATION_CODE)
        VALUES (#{userId}, #{password}, #{phoneFirst}, #{phoneMiddle}, #{phoneLast}, #{phoneVerificationCode}, #{name},
        #{email}, #{emailVerificationCode})
    </insert>

    <insert id="insertSocialUser" parameterType="SocialMemberDTO">
        INSERT INTO USER (USER_ID, PHONE_FIRST, PHONE_MIDDLE, PHONE_LAST, NAME, EMAIL, SNS)
        VALUES (#{userId}, #{phoneFirst}, #{phoneMiddle}, #{phoneLast}, #{name}, #{email}, #{sns})
    </insert>

    <!--아이디와 휴대폰 번호로 회원찾기-->
    <select id="findMemberByNameAndPhone" parameterType="FindIdRequestDTO" resultType="User">
        SELECT *
        FROM USER
        WHERE NAME = #{name}
        AND PHONE_FIRST = #{phoneFirst}
        AND PHONE_MIDDLE = #{phoneMiddle}
    </select>

    <select id="selectUserByIdAndNameAndPhone" parameterType="FindPasswordRequestDTO" resultType="User">
        SELECT *
        FROM USER
        WHERE USER_ID = #{userId}
        AND NAME = #{name}
        AND PHONE_FIRST = #{phoneFirst}
        AND PHONE_MIDDLE = #{phoneMiddle}
    </select>

    <update id="updatePasswordById" parameterType="map">
        UPDATE USER SET PASSWORD = #{password} WHERE USER_ID = #{userId}
    </update>

    <select id="findByUserId" resultType="User">
        SELECT * FROM USER WHERE USER_ID = #{userId}
    </select>

    <select id="findMemberByPhoneNumber" resultType="User">
        SELECT * FROM USER
        WHERE PHONE_FIRST = #{phoneFirst}
        AND PHONE_MIDDLE = #{phoneMiddle}
    </select>

    <update id="incrementPasswordFailureCount" parameterType="String">
        UPDATE USER
        SET PASSWORD_FAILURE_COUNT = PASSWORD_FAILURE_COUNT + 1, UPDATED_AT = CURRENT_TIMESTAMP()
        WHERE USER_ID = #{userId}
    </update>

    <update id="resetPasswordFailureCount" parameterType="String">
        UPDATE USER
        SET PASSWORD_FAILURE_COUNT = 0, UPDATED_AT = CURRENT_TIMESTAMP()
        WHERE USER_ID = #{userId}
    </update>
</mapper>
